services:
  api-bad:
    build:
      context: ./api-bad
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  api-better:
    build:
      context: ./api-better
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - REDIS_ADDR=redis:6379
      - MYSQL_DSN=user:password@tcp(db:3306)/demo
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  db:
    image: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=demo
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    volumes:
      - ./db/table.sql:/docker-entrypoint-initdb.d/1.sql
      - ./db/data.sql:/docker-entrypoint-initdb.d/2.sql
    healthcheck:
      test: ["CMD", "mysql", "-hlocalhost", "-uuser", "-ppassword", "-e", "USE demo;"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
  
  prometheus:
    image: prom/prometheus
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana/:/etc/grafana/provisioning/
    ports:
      - "3000:3000"

  k6:
    build: ./k6
    # ports:
      # - "6565:6565"
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
      - K6_OUT=xk6-prometheus-rw
    command: ["run", "-o", "xk6-prometheus-rw", "/home/k6/workshop-01.js"]

  prom_mysql_exporter:
    image: prom/mysqld-exporter
    ports:
      - '9104:9104'
    environment:
      DATA_SOURCE_NAME: user:password@(db:3306)/demo
    volumes:
      - ./db/config.my.cnf:/.my.cnf
    depends_on:
      db:
        condition: service_healthy

  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    ports:
      - 9100:9100
  